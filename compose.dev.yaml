# compose.complete.yaml - Configuration complète pour développement local
services:
  # Traefik pour le développement local
  traefik:
    image: traefik:v3.0
    container_name: traefik-dev
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS
      - "8080:8080"  # Dashboard Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --log.level=INFO
    networks:
      - traefik
    restart: unless-stopped

  # Application Next.js principale
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: entretien-infirmier-app-dev
    restart: unless-stopped
    ports:
      - "3002:3000"  # ✅ Accès direct sur port 3002
    networks:
      - traefik
    env_file:
      - .env.docker
    volumes:
      - app-data:/app/data
      - ./logs:/app/logs
      - ./prisma:/app/prisma
      # Hot reload en dev (optionnel)
      - ./src:/app/src:ro
      - ./public:/app/public:ro
    labels:
      # Traefik routing
      - "traefik.enable=true"
      
      # Route principale pour app.local
      - "traefik.http.routers.app-dev.rule=Host(`app.local`)"
      - "traefik.http.routers.app-dev.entrypoints=web"
      - "traefik.http.routers.app-dev.service=app-dev"
      
      # Route alternative pour localhost
      - "traefik.http.routers.app-localhost.rule=Host(`localhost`)"
      - "traefik.http.routers.app-localhost.entrypoints=web"
      - "traefik.http.routers.app-localhost.service=app-dev"
      
      # Service configuration
      - "traefik.http.services.app-dev.loadbalancer.server.port=3000"
      
      # HTTPS routing (optionnel)
      - "traefik.http.routers.app-dev-secure.rule=Host(`app.local`)"
      - "traefik.http.routers.app-dev-secure.entrypoints=websecure"
      - "traefik.http.routers.app-dev-secure.service=app-dev"
      - "traefik.http.routers.app-dev-secure.tls=true"
      
    environment:
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true

  # Portainer pour la gestion Docker (optionnel)
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer-dev
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.local`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

networks:
  traefik:
    driver: bridge
    name: traefik-dev

volumes:
  app-data:
    driver: local
    name: app-data-dev
  portainer-data:
    driver: local
    name: portainer-data-dev