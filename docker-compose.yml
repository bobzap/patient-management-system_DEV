services:
  # Service de l'application Next.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: entretien-infirmier-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    networks:
      - app-network
    volumes:
      - app-data:/app/data
      - ./logs:/app/logs
      - ./prisma:/app/prisma
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Service de proxy/load balancer (gardez si n√©cessaire)
  nginx:
    image: nginx:alpine
    container_name: entretien-infirmier-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d:ro
      - ./nginx/certbot/conf:/etc/letsencrypt:ro
      - ./nginx/certbot/www:/var/www/certbot:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - app-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 1m
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true

  # Garder certbot si vous utilisez HTTPS
  certbot:
    image: certbot/certbot
    container_name: entretien-infirmier-certbot
    restart: unless-stopped
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --deploy-hook \"touch /etc/letsencrypt/renewal-hooks/deploy/touch\"; sleep 12h & wait $${!}; done;'"
    security_opt:
      - no-new-privileges:true

networks:
  app-network:
    driver: bridge

volumes:
  app-data:
    driver: local
